name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: チェックアウトリポジトリ
      uses: actions/checkout@v2

    - name: 環境変数を設定
      run: |
        echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> $GITHUB_ENV
        echo "DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }}" >> $GITHUB_ENV
        echo "X_API_KEY=${{ secrets.X_API_KEY }}" >> $GITHUB_ENV
        echo "X_API_KEY_SECRET=${{ secrets.X_API_KEY_SECRET }}" >> $GITHUB_ENV
        echo "X_BEARER_TOKEN=${{ secrets.X_BEARER_TOKEN }}" >> $GITHUB_ENV
        echo "X_ACCESS_TOKEN=${{ secrets.X_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "X_ACCESS_TOKEN_SECRET=${{ secrets.X_ACCESS_TOKEN_SECRET }}" >> $GITHUB_ENV

    - name: SSHでサーバーに接続してデプロイ
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SAKURA_SERVER_HOST }}
        username: ${{ secrets.SAKURA_SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          export DISCORD_TOKEN=${{ env.DISCORD_TOKEN }}
          export DISCORD_CHANNEL_ID=${{ env.DISCORD_CHANNEL_ID }}
          export X_API_KEY=${{ env.X_API_KEY }}
          export X_API_KEY_SECRET=${{ env.X_API_KEY_SECRET }}
          export X_BEARER_TOKEN=${{ env.X_BEARER_TOKEN }}
          export X_ACCESS_TOKEN=${{ env.X_ACCESS_TOKEN }}
          export X_ACCESS_TOKEN_SECRET=${{ env.X_ACCESS_TOKEN_SECRET }}
          cd /home/ubuntu/hiyolabbot
          git pull origin main
          if ! command -v uv &> /dev/null; then
            curl -Ls https://astral.sh/uv/install.sh | sh
          fi
          uv pip install --requirements pyproject.toml
          sudo systemctl restart hiyolabbot.service
